alias userSP R0;
userSP=SP;
alias fcode R1;
fcode=[[PTBR + 2 * (userSP - 5)/ 512] * 512 + (userSP - 5) % 512];
[PROCESS_TABLE + ( [SYSTEM_STATUS_TABLE + 1] * 16) + 13]=SP;
SP=[PROCESS_TABLE + ( [SYSTEM_STATUS_TABLE + 1] * 16) + 11]*512-1;
[PROCESS_TABLE + ( [SYSTEM_STATUS_TABLE + 1] * 16) + 9]=fcode;
alias rAdd R2;
alias fname R3;
rAdd=[PTBR + 2 * (userSP - 1)/ 512] * 512 + (userSP - 1) % 512;
fname=[[PTBR + 2 * (userSP - 4)/ 512] * 512 + (userSP - 4) % 512];
if(fcode==1)then        //Create file
    alias prmsn R4;
    prmsn=[[PTBR + 2 * (userSP - 3)/ 512] * 512 + (userSP - 3) % 512];
    alias temp R5;
    temp=INODE_TABLE;
    while(temp<INODE_TABLE+60*16)do
        if([temp+1]==fname)then
            [rAdd]=0;
            SP=userSP;
            [PROCESS_TABLE + ( [SYSTEM_STATUS_TABLE + 1] * 16) + 9]=0;
            ireturn;
        endif;
        temp=temp+16;
    endwhile;
    alias ind R5;
    ind=0;
    while(ind<60)do
        if([INODE_TABLE+ind*16+1]==-1)then
            [INODE_TABLE+ind*16]=DATA;
            [INODE_TABLE+ind*16+1]=fname;
            [INODE_TABLE+ind*16+2]=0;
            [INODE_TABLE+ind*16+3]=[PROCESS_TABLE+[SYSTEM_STATUS_TABLE+1]*16+3];
            [INODE_TABLE+ind*16+4]=prmsn;
            [INODE_TABLE+ind*16+8]=-1;
            [INODE_TABLE+ind*16+9]=-1;
            [INODE_TABLE+ind*16+10]=-1;
            [INODE_TABLE+ind*16+11]=-1;
            [ROOT_FILE+ind*8]=fname;
            [ROOT_FILE+ind*8+1]=0;
            [ROOT_FILE+ind*8+2]=DATA;
            R6=[USER_TABLE+2*[INODE_TABLE+ind*16+3]];
            [ROOT_FILE+ind*8+3]=R6;
            [ROOT_FILE+ind*8+4]=prmsn;
            breakpoint;
            [rAdd]=0;
            SP=userSP;
            [PROCESS_TABLE + ( [SYSTEM_STATUS_TABLE + 1] * 16) + 9]=0;
            ireturn;
        endif;
        ind=ind+1;
    endwhile;
    [rAdd]=-1;
else if(fcode==4)then   //Delete file
    alias temp R4;
    temp=INODE_TABLE;
    while(temp<INODE_TABLE+60*16)do
        if([temp+1]==fname)then            
            if([temp]!=DATA)then
                breakpoint;
                [rAdd]=-1;
                SP=userSP;
                [PROCESS_TABLE + ( [SYSTEM_STATUS_TABLE + 1] * 16) + 9]=0;
                ireturn;
            endif;
            R5=[PROCESS_TABLE+[SYSTEM_STATUS_TABLE+1]*16+3];
            if([temp+4]==EXCLUSIVE&&!([temp+3]==1||[temp+3]==R6))then
                breakpoint;
                [rAdd]=-1;
                SP=userSP;
                [PROCESS_TABLE + ( [SYSTEM_STATUS_TABLE + 1] * 16) + 9]=0;
                ireturn;
            endif;
            alias ind R5;
            R5=(temp-INODE_TABLE)/16;
            multipush(R0,R1,R2,R3,R4,R5);
            R1=4;
            R2=ind;
            R3=[SYSTEM_STATUS_TABLE+1];
            call RESOURCE_MANAGER;
            multipop(R0,R1,R2,R3,R4,R5);
            if([FILE_STATUS_TABLE+ind*4+1]!=-1)then
                multipush(R0,R1,R2,R3,R4,R5);
                R1=5;
                R2=ind;
                R3=[SYSTEM_STATUS_TABLE+1];
                call RESOURCE_MANAGER;
                multipop(R0,R1,R2,R3,R4,R5);
                [rAdd]=-2;
                SP=userSP;
                [PROCESS_TABLE + ( [SYSTEM_STATUS_TABLE + 1] * 16) + 9]=0;
                ireturn;
            endif;
            alias i R6;
            i=temp+8;
            while(i<temp+12)do
                if([i]!=-1)then
                    alias bf R7;
                    bf=BUFFER_TABLE+([i]%MAX_BUFFER)*4;
                    if([bf]==[i]&&[bf+1]==1)then
                        [bf+1]=0;
                    endif;
                    multipush(R0,R1,R2,R3,R4,R5,R6);
                    R1=4;
                    R2=[i];
                    R3=[SYSTEM_STATUS_TABLE+1];
                    call MEMORY_MANAGER;
                    multipop(R0,R1,R2,R3,R4,R5,R6);
                endif;
                i=i+1;
            endwhile;
            [temp+1]=-1;
            [ROOT_FILE+ind*8]=-1;
            breakpoint;
            multipush(R0,R1,R2,R3,R4);
            R1=5;
            R2=ind;
            R3=[SYSTEM_STATUS_TABLE+1];
            call RESOURCE_MANAGER;
            multipop(R0,R1,R2,R3,R4);
            break;
        endif;
        temp=temp+16;
    endwhile;
    [rAdd]=0;
endif;
endif;
SP=userSP;
[PROCESS_TABLE + ( [SYSTEM_STATUS_TABLE + 1] * 16) + 9]=0;
ireturn;