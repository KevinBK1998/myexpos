alias fcode R1;
alias pid R2;
if(fcode==2)then
    multipush(R1,R2);
    R1=2;
    R2=[PROCESS_TABLE + pid * 16 + 11];
    call MEMORY_MANAGER;
    multipop(R1,R2);
else if(fcode==3)then
    multipush(R1,R2);
    R1=4;
    call PROCESS_MANAGER;
    multipop(R1,R2);
    multipush(R1,R2);
    R1=2;
    call PROCESS_MANAGER;
    multipop(R1,R2);
    [PROCESS_TABLE + pid * 16 + 4]=TERMINATED;
else if(fcode==4)then
    alias pgte R3;
    pgte=PAGE_TABLE_BASE+20*pid;
    [pgte] = -1;
    [pgte+1] = "0000";
    [pgte+2] = -1;
    [pgte+3] = "0000";
    pgte=pgte+4;
    while(pgte<PAGE_TABLE_BASE+20*(pid+1))do
        if([pgte] != -1)then
            multipush(R1,R2,R3);
            R1=2;
            R2=[pgte];
            call MEMORY_MANAGER;
            multipop(R1,R2,R3);
        endif;
        [pgte] = -1;
        [pgte+1] = "0000";
        pgte=pgte+2;
    endwhile;
endif;
endif;
endif;
return;