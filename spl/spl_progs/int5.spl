alias userSP R0;
userSP=SP;
alias fcode R1;
fcode=[[PTBR + 2 * (userSP - 5)/ 512] * 512 + (userSP - 5) % 512];
[PROCESS_TABLE + ( [SYSTEM_STATUS_TABLE + 1] * 16) + 13]=SP;
SP=[PROCESS_TABLE + ( [SYSTEM_STATUS_TABLE + 1] * 16) + 11]*512-1;
[PROCESS_TABLE + ( [SYSTEM_STATUS_TABLE + 1] * 16) + 9]=fcode;
alias rAdd R2;
alias fArg R3;
rAdd=[PTBR + 2 * (userSP - 1)/ 512] * 512 + (userSP - 1) % 512;
fArg=[[PTBR + 2 * (userSP - 4)/ 512] * 512 + (userSP - 4) % 512];
if(fcode==2)then        //Open file
    [rAdd]=-1;
    alias i R4;
    i=[PROCESS_TABLE + ( [SYSTEM_STATUS_TABLE + 1] * 16) + 11]*512+RESOURCE_TABLE_OFFSET;
    R5=i+16;
    while(i<R5)do
        if([i]==-1)then
            multipush(R0,R1,R2,R3,R4,R5);
            R1=6;
            R2=[SYSTEM_STATUS_TABLE + 1];
            call RESOURCE_MANAGER;
            R6=R0;
            multipop(R0,R1,R2,R3,R4,R5);
            if(R5==-1)then
                [rAdd]=-3;
            else
                multipush(R0,R1,R2,R3,R4,R5);
                R1=3;
                R2=fArg;
                call FILE_MANAGER;
                R6=R0;
                multipop(R0,R1,R2,R3,R4,R5);
                if(R6<0)then
                    [rAdd]=R6;
                    break;
                endif;
                [i]=FILE;
                [i+1]=R6;
                [rAdd]=(i%512-RESOURCE_TABLE_OFFSET)/2;
            endif;
            break;
        endif;
        i=i+2;
    endwhile;
else if(fcode==3)then   //Close file
    if(fArg>7||fArg<0)then
        [rAdd]=-1;
        SP=userSP;
        [PROCESS_TABLE + ( [SYSTEM_STATUS_TABLE + 1] * 16) + 9]=0;
        ireturn;
    endif;
    alias resT R4;
    resT=[PROCESS_TABLE + ( [SYSTEM_STATUS_TABLE + 1] * 16) + 11]*512+RESOURCE_TABLE_OFFSET;
    if([resT+fArg*2]!=FILE)then
        [rAdd]=-1;
        SP=userSP;
        [PROCESS_TABLE + ( [SYSTEM_STATUS_TABLE + 1] * 16) + 9]=0;
        ireturn;
    endif;
    alias oft R5;
    oft=[resT+fArg*2+1];
    multipush(R0,R1,R2,R3,R4,R5);
    R1=4;
    R2=oft;
    call FILE_MANAGER;
    multipop(R0,R1,R2,R3,R4,R5);
    [resT]=-1;
    [rAdd]=0;
else if(fcode==6)then   //Change seek
    if(fArg>7||fArg<0)then
        [rAdd]=-1;
        SP=userSP;
        [PROCESS_TABLE + ( [SYSTEM_STATUS_TABLE + 1] * 16) + 9]=0;
        ireturn;
    endif;
    alias resT R4;
    resT=[PROCESS_TABLE + ( [SYSTEM_STATUS_TABLE + 1] * 16) + 11]*512+RESOURCE_TABLE_OFFSET;
    if([resT+fArg*2]!=FILE)then
        [rAdd]=-1;
        SP=userSP;
        [PROCESS_TABLE + ( [SYSTEM_STATUS_TABLE + 1] * 16) + 9]=0;
        ireturn;
    endif;
    alias oft R5;
    oft=[resT+fArg*2+1];
    alias ind R6;
    ind=[oft];
    multipush(R0,R1,R2,R3,R4,R5,R6);
    R1=4;
    R2=ind;
    R3=[SYSTEM_STATUS_TABLE+1];
    call RESOURCE_MANAGER;
    R7=R0;
    multipop(R0,R1,R2,R3,R4,R5,R6);
    if(R7==-1)then
        [rAdd]=-1;
        SP=userSP;
        [PROCESS_TABLE + ( [SYSTEM_STATUS_TABLE + 1] * 16) + 9]=0;
        ireturn;
    endif;
    alias lseek R7;
    lseek=[oft+2];
    alias size R8;
    if(ind==INODE_ROOT)then
        size=480;
    else
        size=[INODE_TABLE+ind*16+2];
    endif;
    alias off R9;
    off=[[PTBR + 2 * (userSP - 3)/ 512] * 512 + (userSP - 3) % 512];
    if(lseek+off<0)then
        multipush(R0,R1,R2,R3,R4,R5,R6,R7);
        R1=5;
        R2=ind;
        R3=[SYSTEM_STATUS_TABLE+1];
        call RESOURCE_MANAGER; 
        multipop(R0,R1,R2,R3,R4,R5,R6,R7); 
        [rAdd]=-2;
        SP=userSP;
        [PROCESS_TABLE + ( [SYSTEM_STATUS_TABLE + 1] * 16) + 9]=0;
        ireturn;
    endif;
    if(off==0)then
        [oft+2]=0;
    else if(lseek+off>size)then
            [oft+2]=size;
        else
            [oft+2]=lseek+off;
        endif;
    endif;
    multipush(R0,R1,R2,R3,R4,R5,R6,R7);
    R1=5;
    R2=ind;
    R3=[SYSTEM_STATUS_TABLE+1];
    call RESOURCE_MANAGER; 
    multipop(R0,R1,R2,R3,R4,R5,R6,R7);     
endif;
endif;
endif;
SP=userSP;
[PROCESS_TABLE + ( [SYSTEM_STATUS_TABLE + 1] * 16) + 9]=0;
ireturn;