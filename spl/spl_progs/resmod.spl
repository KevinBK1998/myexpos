alias functionNum R1;
alias currentPID R2;
alias pid R3;
if(functionNum==8)then
    while([TERMINAL_STATUS_TABLE]==1)do
        [PROCESS_TABLE+pid*16+4]=WAIT_TERMINAL;
        multipush(R1,R2,R3);
        call SCHEDULER;
        multipop(R1,R2,R3);
    endwhile;
    [TERMINAL_STATUS_TABLE]=1;
    [TERMINAL_STATUS_TABLE+1]=pid;
else if(functionNum==9)then
        if([TERMINAL_STATUS_TABLE+1]!=pid)then
            R0=-1;
            return;
        endif;
        [TERMINAL_STATUS_TABLE]=0;
        alias pte R4;
        pte=PROCESS_TABLE;
        while(pte<(PROCESS_TABLE +16*16))do
            if([pte+4]==WAIT_TERMINAL && [pte+1]!=-1)then
                [pte+4]=READY;
            endif;
            pte=pte+16;
        endwhile;
        R0=0;
    endif;
endif;
breakpoint;
return;