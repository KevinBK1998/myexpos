[PROCESS_TABLE + ( [SYSTEM_STATUS_TABLE + 1] * 16) + 9]=9;
alias userSP R0;
userSP=SP;
[PROCESS_TABLE + ( [SYSTEM_STATUS_TABLE + 1] * 16) + 13]=SP;
SP=[PROCESS_TABLE + ( [SYSTEM_STATUS_TABLE + 1] * 16) + 11]*512-1;
alias fname R1;
alias temp R2;
alias flag R3;
alias rAdd R4;
fname=[[PTBR + 2 * (userSP - 4)/ 512] * 512 + (userSP - 4) % 512];
temp=INODE_TABLE;
flag=0;
rAdd=[PTBR + 2 * (userSP - 1)/ 512] * 512 + (userSP - 1) % 512;
while(temp<INODE_TABLE+60*16)do
    if([temp+1]==fname &&[temp]==EXEC)then
        flag=1;
        alias ind R5;
        ind=(temp-INODE_TABLE)/16;
        multipush(R0,R1,R2,R3,R4,R5);
        R1=3;
        R2=[SYSTEM_STATUS_TABLE + 1];
        call PROCESS_MANAGER;
        multipop(R0,R1,R2,R3,R4,R5);
        alias uPNum R6;
        uPNum=[PROCESS_TABLE + ( [SYSTEM_STATUS_TABLE + 1] * 16) + 11];
        [MEMORY_FREE_LIST+uPNum]=[MEMORY_FREE_LIST+uPNum]+1;
        [SYSTEM_STATUS_TABLE + 2]=[SYSTEM_STATUS_TABLE + 2]-1;
        SP=uPNum*512-1;
        alias i R7;
        i=uPNum*512+RESOURCE_TABLE_OFFSET;
        while(i<(uPNum+1)*512)do
            [i]=-1;
            i=i+2;
        endwhile;
        [PROCESS_TABLE + ( [SYSTEM_STATUS_TABLE + 1] * 16) ]=0;
        [PROCESS_TABLE + ( [SYSTEM_STATUS_TABLE + 1] * 16) + 7]=ind;
        [PROCESS_TABLE + ( [SYSTEM_STATUS_TABLE + 1] * 16) + 4]=RUNNING;
        alias pgb R8;
        pgb=PAGE_TABLE_BASE+20*[SYSTEM_STATUS_TABLE + 1];
        //Library
        [pgb+0]= 63;
        [pgb+1] = "0100";
        [pgb+2] = 64;
        [pgb+3] = "0100";
        //Heap
        [pgb+4] = -1;
        [pgb+5] = "0000";
        [pgb+6] = -1;
        [pgb+7] = "0000";
        //Stack
        multipush(R0,R1,R2,R3,R4,R5,R6,R7,R8);
        R1=1;
        call MEMORY_MANAGER;
        R9=R0;
        multipop(R0,R1,R2,R3,R4,R5,R6,R7,R8);
        [pgb+16] = R9;
        [pgb+17] = "0110";
        multipush(R0,R1,R2,R3,R4,R5,R6,R7,R8);
        R1=1;
        call MEMORY_MANAGER;
        R9=R0;
        multipop(R0,R1,R2,R3,R4,R5,R6,R7,R8);
        [pgb+18] = R9;
        [pgb+19] = "0110";
        //Code
        multipush(R0,R1,R2,R3,R4,R5,R6,R7,R8);
        R1=5;
        R2=[INODE_TABLE+ind*16+8];
        call MEMORY_MANAGER;
        R9=R0;
        multipop(R0,R1,R2,R3,R4,R5,R6,R7,R8);
        [pgb+8] = R9;
        [pgb+9] = "0100";
        [pgb+10] = -1;
        [pgb+11] = "0000";
        [pgb+12] = -1;
        [pgb+13] = "0000";
        [pgb+14] = -1;
        [pgb+15] = "0000";
        i=0;
        while(i<10)do
            [DISK_MAP_TABLE+[SYSTEM_STATUS_TABLE+1]*10+i]=-1;
            i=i+1;
        endwhile;
        i=0;
        while(i<4)do
            [DISK_MAP_TABLE+[SYSTEM_STATUS_TABLE+1]*10+4+i]=[INODE_TABLE+ind*16+8+i];
            i=i+1;
        endwhile;
        pgb=PAGE_TABLE_BASE+20*[SYSTEM_STATUS_TABLE + 1];
        [[pgb+8*2]*512] = [[pgb+4*2]*512+1];
        SP=8*512;
        break;
    endif;
    temp=temp+16;
endwhile;
if(flag==0)then
    [rAdd]=-1;
    SP=userSP;
endif;
[PROCESS_TABLE + ( [SYSTEM_STATUS_TABLE + 1] * 16) + 9]=0;
ireturn;