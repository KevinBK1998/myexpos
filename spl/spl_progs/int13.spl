alias userSP R0;
userSP=SP;
alias fcode R1;
fcode=[[PTBR + 2 * (userSP - 5)/ 512] * 512 + (userSP - 5) % 512];
[PROCESS_TABLE + ( [SYSTEM_STATUS_TABLE + 1] * 16) + 13]=SP;
SP=[PROCESS_TABLE + ( [SYSTEM_STATUS_TABLE + 1] * 16) + 11]*512-1;
alias rAdd R2;
rAdd=[PTBR + 2 * (userSP - 1)/ 512] * 512 + (userSP - 1) % 512;
if(fcode==17)then  //Semget
    [rAdd]=-1;
    alias i R3;
    i=[PROCESS_TABLE + ( [SYSTEM_STATUS_TABLE + 1] * 16) + 11]*512+RESOURCE_TABLE_OFFSET;
    R4=i+16;
    while(i<R4)do
        if([i]==-1)then
            multipush(R0,R1,R2,R3,R4);
            R1=6;
            R2=[SYSTEM_STATUS_TABLE + 1];
            call RESOURCE_MANAGER;
            R5=R0;
            multipop(R0,R1,R2,R3,R4);
            if(R5==-1)then
                [rAdd]=-2;
            else
                [i]=SEMAPHORE;
                [i+1]=R5;
                [rAdd]=(i%512-RESOURCE_TABLE_OFFSET)/2;
            endif;
            break;
        endif;
        i=i+2;
    endwhile;
else if(fcode==18)then  //Semrelease
    alias id R3;
    id=[[PTBR + 2 * (userSP - 4)/ 512] * 512 + (userSP - 4) % 512];
    alias i R4;
    i=[PROCESS_TABLE + ( [SYSTEM_STATUS_TABLE + 1] * 16) + 11]*512+RESOURCE_TABLE_OFFSET+id*2;
    if(id>7||id<0||[i]!=SEMAPHORE)then
        [rAdd]=-1;
        SP=userSP;
        [PROCESS_TABLE + ( [SYSTEM_STATUS_TABLE + 1] * 16) + 9]=0;
        ireturn;
    endif;
    breakpoint;
    multipush(R0,R1,R2,R3,R4);
    R1=7;
    R2=[i+1];
    R3=[SYSTEM_STATUS_TABLE + 1];
    call RESOURCE_MANAGER;
    multipop(R0,R1,R2,R3,R4);
    breakpoint;
    [i]=-1;
    [rAdd]=0;
endif;
endif;
SP=userSP;
[PROCESS_TABLE + ( [SYSTEM_STATUS_TABLE + 1] * 16) + 9]=0;
ireturn;