[PROCESS_TABLE + ( [SYSTEM_STATUS_TABLE + 1] * 16) + 9]=5;
alias userSP R0;
userSP=SP;
[PROCESS_TABLE + ( [SYSTEM_STATUS_TABLE + 1] * 16) + 13]=SP;
SP=[PROCESS_TABLE + ( [SYSTEM_STATUS_TABLE + 1] * 16) + 11]*512-1;
alias fDesc R1;
alias Wrd R2;
alias rAdd R3;
fDesc=[[PTBR + 2 * (userSP - 4)/ 512] * 512 + (userSP - 4) % 512];
Wrd=[[PTBR + 2 * (userSP - 3)/ 512] * 512 + (userSP - 3) % 512];
rAdd = ([PTBR + 2 * ((userSP - 1)/ 512)] * 512) + (userSP - 1) % 512;
if(fDesc!=-2)then
    if(fDesc>7||fDesc<0)then
        [rAdd]=-1;
        SP=userSP;
        [PROCESS_TABLE + ( [SYSTEM_STATUS_TABLE + 1] * 16) + 9]=0;
        ireturn;
    endif;
    alias resT R4;
    resT=[PROCESS_TABLE + ( [SYSTEM_STATUS_TABLE + 1] * 16) + 11]*512+RESOURCE_TABLE_OFFSET;
    if([resT+fDesc*2]!=FILE)then
        [rAdd]=-1;
        SP=userSP;
        [PROCESS_TABLE + ( [SYSTEM_STATUS_TABLE + 1] * 16) + 9]=0;
        ireturn;
    endif;
    alias oft R5;
    oft=[resT+fDesc*2+1];
    alias ind R6;
    ind=[oft];
    R7=[PROCESS_TABLE + ( [SYSTEM_STATUS_TABLE + 1] * 16) + 3];
    R8=[INODE_TABLE+ind*16+3];
    if([INODE_TABLE+ind*16+4]==EXCLUSIVE&&!(R8==1||R8==R7))then //Check permission
        [rAdd]=-3;
        SP=userSP;
        [PROCESS_TABLE + ( [SYSTEM_STATUS_TABLE + 1] * 16) + 9]=0;
        ireturn;
    endif;
    multipush(R0,R1,R2,R3,R4,R5,R6);
    R1=4;
    R2=ind;
    R3=[SYSTEM_STATUS_TABLE+1];
    call RESOURCE_MANAGER;
    R7=R0;
    multipop(R0,R1,R2,R3,R4,R5,R6);
    if(R7==-1)then
        [rAdd]=-1;
        SP=userSP;
        [PROCESS_TABLE + ( [SYSTEM_STATUS_TABLE + 1] * 16) + 9]=0;
        ireturn;
    endif;
    alias lseek R7;
    lseek=[oft+2];
    if(lseek==MAX_FILE_SIZE)then      //check if eof 
        multipush(R0,R1,R2,R3,R4,R5,R6,R7);
        R1=5;
        R2=ind;
        R3=[SYSTEM_STATUS_TABLE+1];
        call RESOURCE_MANAGER; 
        multipop(R0,R1,R2,R3,R4,R5,R6,R7);
        [rAdd]=-2;
        SP=userSP;
        [PROCESS_TABLE + ( [SYSTEM_STATUS_TABLE + 1] * 16) + 9]=0;
        ireturn;
    endif;
    if(lseek%512==0&&lseek==[INODE_TABLE+ind*16+2])then //Bring next block to buffer
        multipush(R0,R1,R2,R3,R4,R5,R6,R7);
        R1=3;
        call MEMORY_MANAGER;
        R8=R0;
        multipop(R0,R1,R2,R3,R4,R5,R6,R7);
        if(R8==-1)then
            multipush(R0,R1,R2,R3,R4,R5,R6);
            R1=5;
            R2=ind;
            R3=[SYSTEM_STATUS_TABLE+1];
            call RESOURCE_MANAGER;
            multipop(R0,R1,R2,R3,R4,R5,R6);
            [rAdd]=-2;
            SP=userSP;
            [PROCESS_TABLE + ( [SYSTEM_STATUS_TABLE + 1] * 16) + 9]=0;
            ireturn;
        endif;
        [INODE_TABLE+ind*16+8+lseek/512]=R8;
    endif;
    alias blk R8;
    blk=[INODE_TABLE+ind*16+8+lseek/512];
    alias off R9;
    off=lseek%512;
    multipush(R0,R1,R2,R3,R4,R5,R6,R7);
    R1=1;
    R4=Wrd;
    R2=blk;
    R3=off;
    call FILE_MANAGER; 
    multipop(R0,R1,R2,R3,R4,R5,R6,R7);
    if(lseek==MAX_FILE_SIZE)then
        [INODE_TABLE+ind*16+2]=[INODE_TABLE+ind*16+2]+1;
        [ROOT_FILE+ind*8+2]=[ROOT_FILE+ind*8+2]+1;
    endif;
    [oft+2]=[oft+2]+1;
    multipush(R0,R1,R2,R3,R4,R5,R6,R7);
    R1=5;
    R2=ind;
    R3=[SYSTEM_STATUS_TABLE+1];
    call RESOURCE_MANAGER; 
    multipop(R0,R1,R2,R3,R4,R5,R6,R7);    
else
    multipush(R0,R1,R2);
    R1=3;
    R3=Wrd;
    R2=[SYSTEM_STATUS_TABLE + 1];
    call DEVICE_MANAGER;
    multipop(R0,R1,R2);
    [rAdd]=0;
endif;
SP=userSP;
[PROCESS_TABLE + ( [SYSTEM_STATUS_TABLE + 1] * 16) + 9]=0;
ireturn;