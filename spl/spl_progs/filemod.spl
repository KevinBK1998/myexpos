alias fcode R1;
alias blk R2;
alias off R3;
if(fcode==1)then        //Buffered Write
    print "Write";
    halt;
else if(fcode==2)then   //Buffered Read
    alias Add R4;
    alias bno R5;
    bno=blk%4;
    multipush(R0,R1,R2,R3,R4,R5);
    R1=1;
    R2=bno;
    R3=[SYSTEM_STATUS_TABLE+1];
    call RESOURCE_MANAGER;
    multipop(R0,R1,R2,R3,R4,R5);
    if([BUFFER_TABLE+bno*4]!=blk)then
        if([BUFFER_TABLE+bno*4+1]==1)then
            print "dirty";
            multipush(R0,R1,R2,R3,R4,R5);
            R1=1;
            R2=[SYSTEM_STATUS_TABLE+1];
            R3=71+bno;
            R4=[BUFFER_TABLE+bno*4];
            call DEVICE_MANAGER;
            multipop(R0,R1,R2,R3,R4,R5);
            [BUFFER_TABLE+bno*4+1]=0;
        endif;
        multipush(R0,R1,R2,R3,R4,R5);
        R1=2;
        R4=blk;
        R2=[SYSTEM_STATUS_TABLE+1];
        R3=71+bno;
        call DEVICE_MANAGER;
        multipop(R0,R1,R2,R3,R4,R5);
        [BUFFER_TABLE+bno*4]=blk;
    endif;
    [Add]=[(71+bno)*512+off];
    multipush(R0,R1,R2,R3,R4,R5);
    R1=2;
    R2=bno;
    R3=[SYSTEM_STATUS_TABLE+1];
    call RESOURCE_MANAGER;
    multipop(R0,R1,R2,R3,R4,R5);
else if(fcode==3)then   //Open
    alias fname R2;
    alias temp R3;
    temp=INODE_TABLE;
    R0=-1; 
    while(temp<INODE_TABLE+60*16)do
        if([temp+1]==fname)then
            alias ind R4;
            ind=(temp-INODE_TABLE)/16;
            multipush(R0,R1,R2,R3,R4);
            R1=4;
            R2=ind;
            R3=[SYSTEM_STATUS_TABLE+1];
            call RESOURCE_MANAGER;
            R5=R0;
            multipop(R0,R1,R2,R3,R4);
            if(R5==-1)then
                break;
            endif;
            if([temp]==EXEC)then
                multipush(R0,R1,R2,R3,R4);
                R1=5;
                R2=ind;
                R3=[SYSTEM_STATUS_TABLE+1];
                call RESOURCE_MANAGER;
                R5=R0;
                multipop(R0,R1,R2,R3,R4);
                break;                
            endif;
            alias oft R5;
            oft=OPEN_FILE_TABLE;
            alias f R6;
            f=0;
            while(oft<OPEN_FILE_TABLE+MAX_OPENFILE_NUM*4)do
                if([oft]==-1)then
                    f=1;
                    break;
                endif;  
                oft=oft+4;
            endwhile;
            if(f==0)then
                multipush(R0,R1,R2,R3,R4,R5);
                R1=5;
                R2=ind;
                R3=[SYSTEM_STATUS_TABLE+1];
                call RESOURCE_MANAGER;
                R5=R0;
                multipop(R0,R1,R2,R3,R4,R5);
                R0=-2;
                break;
            endif;
            if(fname=="root")then
                [oft]=INODE_ROOT;
            else
                if([FILE_STATUS_TABLE+4*ind+1]==-1)then
                    [FILE_STATUS_TABLE+4*ind+1]=1;
                else
                    [FILE_STATUS_TABLE+4*ind+1]=[FILE_STATUS_TABLE+4*ind+1]+1;
                endif;
                [oft]=ind;
            endif;
            [oft+1]=1;
            [oft+2]=0;
            multipush(R0,R1,R2,R3,R4,R5);
            R1=5;
            R2=ind;
            R3=[SYSTEM_STATUS_TABLE+1];
            call RESOURCE_MANAGER;
            R5=R0;
            multipop(R0,R1,R2,R3,R4,R5);
            R0=oft;
            break;
        endif;
        temp=temp+16;
    endwhile;  
else if(fcode==4)then   //Close
    alias oft R2;
    alias ind R3;
    ind=[oft];
    [oft+1]=[oft+1]-1;
    if([oft+1]==0)then
        [oft]=-1;
        [oft+1]=-1;
        [oft+2]=-1;
        if(ind!=INODE_ROOT)then
            [FILE_STATUS_TABLE+ind*4+1]=[FILE_STATUS_TABLE+ind*4+1]-1;
        endif;
        if([FILE_STATUS_TABLE+ind*4+1]==0)then
            [FILE_STATUS_TABLE+ind*4+1]=-1;
        endif;
    endif;
endif;
endif;
endif;
endif;
return;